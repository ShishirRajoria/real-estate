step 1:- install react.js with vite using command npm create vite@latest clientfolder
         then we select reactjs and then javascript+swc not type script
step:2:- go inside client folder
         using cd command then npm i    
step-3:- install tailwind vite css , go through for steps from it official web for vite and react              
          1:-npm install -D tailwindcss postcss autoprefixer
          2:-npx tailwindcss init -p
          3:- npm run dev

          for tailwind css if not find the suggestion just type ctrl+space
step4:- adding github repository
        in terminal but first ctrl+c to stop running
        1:- git init :- to initialize the github repository
        2:- git add .     
        3:- git commit -m "any message"
        4:- go to your github account and create new repository
        5:- after creating repository then follow all the necessary command over there and use it in our terminal
        6:- git remote add origin https://github.com/ShishirRajoria/real-estate.git (use different repo. 
        whenever create new one)
        7:- git branch -M main
        8:- git push -u origin main
 then just refreshing the page on github we get our code       
 NOTE:- add final version after deploying it successfully to our github repo

 # CREATE PAGES AND ROUTES
step1:- add the pages in src folder
step2:- npm install react-router-dom
        then go to app.jsx and add all the pages within app.jsx

        NOTE:- remember o commit the changes in our repository
so to commit our code every time no need to do it from terminal every time 
go to source control icon under search symbol in vs code and then go to our location of  in our desktop 

# CREATE HEADER COMPONENT
note:- we will make a mechanism to keep that header in all pages 
after doing necessary changes 
1:- install package react icons to use icon also i.e npm i react-icons
NOTE:-import { Link } from "react-router-dom";//link used to go one page to another w/o refreshing the page
in this we do work with only header section adjust some css and all adjust respective route on click 
on them other functionality would be done afterwards

# CREATE AND RUN THE SERVER
NOTE:- we are going to make another folder named api and initialize the package json file here but need to do
       in the root of our project not inside the api folder beacause when we deploy our website, the render
       (where we are deploying rt now) platform check the root of our website and consider both our
       frontend and backend, so package.json should be present inside of the root
step1:- cd.. //so to be inside the root
step2:- * npm init -y    
step3:- make a api folder in root and make index.js folder which is main folder and package.json will 
        found out thid file in api folder
step4:- npm install express    * install it in root inside package.json      
note :- "type":"module" adding this in package.json as we want to use import in index.js
make necessary changes like listen on 3000 in index.js and then 
step5:- node api/index.js // this is of no use further as nodemon handle it so no need to start server
        when the changes made in api folder everytime
step6:- install the package nodemon i.e:- npm install nodemon 
after that
 remove this from package.json "test": "echo \"Error: no test specified\" && exit 1"
step7:-and add this scripts in package.json "dev":"nodemon api/index.js" and "start":"node api/index.js", 
step8:- npm run dev will help to run the nodemon
NOTE:- so with this setup we did not need to run the server again and again anymore

now one change i have created my git repo in clientfolder which shoul be created in root folder
so need to remove it from there and create it into root folder by using these commands
after moving in clientfolder
1:- mv .git ../ 
then bring the .gitignore file outside in root folder
and then in source control just select all the changes then commit and push it in ur branch

# CONNECT TO DATABASE

1:- in root npm i mongoose
2:- while building database in mongodb we are using cloud env. as need to deploy our app afterwards

my pass:- z53z9HVbTvnLO3XE

3:- npm i dotenv
4:- remember to add dotenv file to gitignore before commiting on github
NOTE:-Go through the video if go throgh the steps of connection

